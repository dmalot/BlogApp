{"ast":null,"code":"import { BehaviorSubject, tap } from 'rxjs';\nimport { User } from './models/user.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./localstorage.service\";\nimport * as i3 from \"@angular/router\";\nexport class AuthService {\n  constructor(http, storage, router) {\n    this.http = http;\n    this.storage = storage;\n    this.router = router;\n    this.user = new BehaviorSubject(null);\n    this.isLoggedIn = false;\n  }\n  userLogin(username, password) {\n    return this.http.post('http://127.0.0.1:8000/api/user/token/', {\n      username,\n      password\n    }).pipe(tap(resData => {\n      const user = new User(resData.username, resData.email, resData.token);\n      this.user.next(user);\n    })).subscribe(resData => {\n      console.log(resData);\n      this.isLoggedIn = true;\n      console.log('user is ' + this.isLoggedIn);\n      this.router.navigate(['home']);\n    });\n  }\n  userRegister(username, email, password) {\n    this.http.post('http://127.0.0.1:8000/api/user/create/', {\n      username,\n      email,\n      password\n    }).subscribe(userData => {\n      console.log('user created');\n    });\n    this.http.post('http://127.0.0.1:8000/api/user/token/', {\n      username,\n      password\n    }).pipe(tap(resData => {\n      const user = new User(resData.username, resData.email, resData.token);\n      this.user.next(user);\n    }));\n  }\n  userLogout() {\n    this.user.next(null);\n    this.router.navigate(['/']);\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.LocalStorageService), i0.ɵɵinject(i3.Router));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac\n});","map":{"version":3,"mappings":"AAGA,SAASA,eAAe,EAAuBC,GAAG,QAAQ,MAAM;AAEhE,SAASC,IAAI,QAAQ,qBAAqB;;;;;AAG1C,OAAM,MAAOC,WAAW;EAEtBC,YAAoBC,IAAgB,EAAUC,OAA4B,EACtDC,MAAc;IADd,SAAI,GAAJF,IAAI;IAAsB,YAAO,GAAPC,OAAO;IACjC,WAAM,GAANC,MAAM;IAF1B,SAAI,GAAG,IAAIP,eAAe,CAAO,IAAI,CAAC;IAItC,eAAU,GAAG,KAAK;EAFmB;EAIrCQ,SAAS,CAACC,QAAgB,EAAEC,QAAgB;IAC1C,OAAO,IAAI,CAACL,IAAI,CACbM,IAAI,CAAC,uCAAuC,EAAE;MAAEF,QAAQ;MAAEC;IAAQ,CAAE,CAAC,CACrEE,IAAI,CACHX,GAAG,CAAEY,OAAa,IAAI;MACpB,MAAMC,IAAI,GAAG,IAAIZ,IAAI,CAACW,OAAO,CAACJ,QAAQ,EAAEI,OAAO,CAACE,KAAK,EAAEF,OAAO,CAACG,KAAK,CAAC;MACrE,IAAI,CAACF,IAAI,CAACG,IAAI,CAACH,IAAI,CAAC;IACtB,CAAC,CAAC,CACH,CAACI,SAAS,CAAEL,OAAO,IAAI;MACtBM,OAAO,CAACC,GAAG,CAACP,OAAO,CAAC;MACpB,IAAI,CAACQ,UAAU,GAAG,IAAI;MACtBF,OAAO,CAACC,GAAG,CAAC,UAAU,GAAG,IAAI,CAACC,UAAU,CAAC;MACzC,IAAI,CAACd,MAAM,CAACe,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC;IAEhC,CAAC,CAAC;EAEN;EAEAC,YAAY,CAACd,QAAgB,EAAEM,KAAa,EAAEL,QAAgB;IAC5D,IAAI,CAACL,IAAI,CACNM,IAAI,CAAC,wCAAwC,EAAE;MAC9CF,QAAQ;MACRM,KAAK;MACLL;KACD,CAAC,CACDQ,SAAS,CAAEM,QAAQ,IAAI;MACtBL,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;IAC7B,CAAC,CAAC;IACJ,IAAI,CAACf,IAAI,CACNM,IAAI,CAAC,uCAAuC,EAAE;MAAEF,QAAQ;MAAEC;IAAQ,CAAE,CAAC,CACrEE,IAAI,CACHX,GAAG,CAAEY,OAAa,IAAI;MACpB,MAAMC,IAAI,GAAG,IAAIZ,IAAI,CAACW,OAAO,CAACJ,QAAQ,EAAEI,OAAO,CAACE,KAAK,EAAEF,OAAO,CAACG,KAAK,CAAC;MACrE,IAAI,CAACF,IAAI,CAACG,IAAI,CAACH,IAAI,CAAC;IACtB,CAAC,CAAC,CACH;EACL;EAEAW,UAAU;IACR,IAAI,CAACX,IAAI,CAACG,IAAI,CAAC,IAAI,CAAC;IACpB,IAAI,CAACV,MAAM,CAACe,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;EAC7B;;AAhDWnB,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAuB,SAAXvB,WAAW;AAAA","names":["BehaviorSubject","tap","User","AuthService","constructor","http","storage","router","userLogin","username","password","post","pipe","resData","user","email","token","next","subscribe","console","log","isLoggedIn","navigate","userRegister","userData","userLogout","factory"],"sourceRoot":"","sources":["C:\\Users\\Devil\\Desktop\\BlogApp\\frontend\\BlogApp\\src\\app\\auth.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { EventEmitter, Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { BehaviorSubject, catchError, Subject, tap } from 'rxjs';\r\nimport { LocalStorageService } from './localstorage.service';\r\nimport { User } from './models/user.model';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n  user = new BehaviorSubject<User>(null);\r\n  constructor(private http: HttpClient, private storage: LocalStorageService,\r\n              private router: Router) {}\r\n\r\n  isLoggedIn = false;\r\n\r\n  userLogin(username: string, password: string) {\r\n    return this.http\r\n      .post('http://127.0.0.1:8000/api/user/token/', { username, password })\r\n      .pipe(\r\n        tap((resData: User) => {\r\n          const user = new User(resData.username, resData.email, resData.token);\r\n          this.user.next(user);\r\n        })\r\n      ).subscribe((resData) => {\r\n        console.log(resData);\r\n        this.isLoggedIn = true;\r\n        console.log('user is ' + this.isLoggedIn);\r\n        this.router.navigate(['home']);\r\n\r\n      });\r\n\r\n  }\r\n\r\n  userRegister(username: string, email: string, password: string) {\r\n    this.http\r\n      .post('http://127.0.0.1:8000/api/user/create/', {\r\n        username,\r\n        email,\r\n        password,\r\n      })\r\n      .subscribe((userData) => {\r\n        console.log('user created');\r\n      });\r\n    this.http\r\n      .post('http://127.0.0.1:8000/api/user/token/', { username, password })\r\n      .pipe(\r\n        tap((resData: User) => {\r\n          const user = new User(resData.username, resData.email, resData.token);\r\n          this.user.next(user);\r\n        })\r\n      );\r\n  }\r\n\r\n  userLogout() {\r\n    this.user.next(null);\r\n    this.router.navigate(['/'])\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}