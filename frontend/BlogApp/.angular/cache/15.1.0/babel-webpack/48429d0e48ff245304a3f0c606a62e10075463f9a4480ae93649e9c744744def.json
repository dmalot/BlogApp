{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, EventEmitter, Output } from '@angular/core';\nlet LoginComponent = class LoginComponent {\n  constructor(authService, router, storage, http) {\n    this.authService = authService;\n    this.router = router;\n    this.storage = storage;\n    this.http = http;\n    this.login = false;\n    this.userlogin = new EventEmitter();\n  }\n  onLogin(loginform) {\n    const username = loginform.value.username;\n    const password = loginform.value.password;\n    this.authService.userLogin(username, password).subscribe(responseData => {\n      console.log(responseData);\n      const string_response = JSON.stringify(responseData);\n      this.storage.set('Token', string_response);\n      console.log('Token successfully stored.');\n      console.log(JSON.parse(this.storage.get('Token')));\n      console.log(\"This was executed before subscription completion.\");\n      this.http.fetchPosts().subscribe(response => {\n        console.log(response);\n      });\n      this.router.navigate(['home']);\n    });\n  }\n  onClickLogin() {\n    this.login = true;\n  }\n  onClickRegister() {\n    this.login = false;\n  }\n  onRegister(registerform) {}\n};\n__decorate([Output()], LoginComponent.prototype, \"userlogin\", void 0);\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"mappings":";AAEA,SAASA,SAAS,EAAEC,YAAY,EAAEC,MAAM,QAAQ,eAAe;AAYxD,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAKzBC,YAAoBC,WAAwB,EAAUC,MAAc,EAChDC,OAA4B,EAC5BC,IAAU;IAFV,gBAAW,GAAXH,WAAW;IAAuB,WAAM,GAANC,MAAM;IACxC,YAAO,GAAPC,OAAO;IACP,SAAI,GAAJC,IAAI;IALxB,UAAK,GAAG,KAAK;IACH,cAAS,GAAG,IAAIP,YAAY,EAAO;EAIX;EAIlCQ,OAAO,CAACC,SAAiB;IAEvB,MAAMC,QAAQ,GAAGD,SAAS,CAACE,KAAK,CAACD,QAAQ;IACzC,MAAME,QAAQ,GAAGH,SAAS,CAACE,KAAK,CAACC,QAAQ;IAGzC,IAAI,CAACR,WAAW,CAACS,SAAS,CAACH,QAAQ,EAAEE,QAAQ,CAAC,CAACE,SAAS,CACtDC,YAAY,IAAG;MAEbC,OAAO,CAACC,GAAG,CAACF,YAAY,CAAC;MACzB,MAAMG,eAAe,GAAGC,IAAI,CAACC,SAAS,CAACL,YAAY,CAAC;MACpD,IAAI,CAACT,OAAO,CAACe,GAAG,CAAC,OAAO,EAAEH,eAAe,CAAC;MAC1CF,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;MACzCD,OAAO,CAACC,GAAG,CAACE,IAAI,CAACG,KAAK,CAAC,IAAI,CAAChB,OAAO,CAACiB,GAAG,CAAC,OAAO,CAAE,CAAC,CAAC;MACnDP,OAAO,CAACC,GAAG,CAAC,mDAAmD,CAAC;MAChE,IAAI,CAACV,IAAI,CAACiB,UAAU,EAAE,CAACV,SAAS,CAACW,QAAQ,IAAG;QAC1CT,OAAO,CAACC,GAAG,CAACQ,QAAQ,CAAC;MACvB,CAAC,CAAC;MACF,IAAI,CAACpB,MAAM,CAACqB,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC;IAGhC,CAAC,CAAC;EAMN;EAEAC,YAAY;IACV,IAAI,CAACC,KAAK,GAAG,IAAI;EACnB;EAEAC,eAAe;IAEb,IAAI,CAACD,KAAK,GAAG,KAAK;EACpB;EAEAE,UAAU,CAACC,YAAoB,GAC/B;CAED;AAjDWC,YAAT/B,MAAM,EAAE,iDAAoC;AAHlCC,cAAc,eAL1BH,SAAS,CAAC;EACTkC,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,GACWjC,cAAc,CAoD1B;SApDYA,cAAc","names":["Component","EventEmitter","Output","LoginComponent","constructor","authService","router","storage","http","onLogin","loginform","username","value","password","userLogin","subscribe","responseData","console","log","string_response","JSON","stringify","set","parse","get","fetchPosts","response","navigate","onClickLogin","login","onClickRegister","onRegister","registerform","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Devil\\Desktop\\BlogApp\\frontend\\BlogApp\\src\\app\\login\\login.component.ts"],"sourcesContent":["import { NgFor } from '@angular/common';\nimport { ParseSourceFile } from '@angular/compiler';\nimport { Component, EventEmitter, Output } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\nimport { LocalStorageService } from '../localstorage.service';\nimport { User } from '../models/user.model';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\n  login = false\n  @Output() userlogin = new EventEmitter<any>()\n\n  constructor(private authService: AuthService, private router: Router,\n              private storage: LocalStorageService,\n              private http: Http) { }\n\n\n\n  onLogin(loginform: NgForm) {\n\n    const username = loginform.value.username;\n    const password = loginform.value.password\n\n\n    this.authService.userLogin(username, password).subscribe(\n      responseData => {\n\n        console.log(responseData);\n        const string_response = JSON.stringify(responseData);\n        this.storage.set('Token', string_response)\n        console.log('Token successfully stored.')\n        console.log(JSON.parse(this.storage.get('Token')!));\n        console.log(\"This was executed before subscription completion.\")\n        this.http.fetchPosts().subscribe(response => {\n          console.log(response);\n        })\n        this.router.navigate(['home'])\n\n\n      });\n\n\n\n\n\n  }\n\n  onClickLogin() {\n    this.login = true\n  }\n\n  onClickRegister() {\n\n    this.login = false\n  }\n\n  onRegister(registerform: NgForm) {\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}