{"ast":null,"code":"import { Subject, tap } from 'rxjs';\nimport { User } from './models/user.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./localstorage.service\";\nexport class AuthService {\n  constructor(http, storage) {\n    this.http = http;\n    this.storage = storage;\n    this.user = new Subject();\n    this.isLoggedIn = false;\n  }\n  userLogin(username, password) {\n    this.http.post('http://127.0.0.1:8000/api/user/token/', {\n      username,\n      password\n    }).pipe(tap(resData => {\n      const user = new User();\n    })).subscribe(responseData => {\n      // console.log(responseData);\n    });\n    this.isLoggedIn = true;\n  }\n  userRegister(username, email, password) {}\n  userLogout(username) {\n    this.isLoggedIn = false;\n    this.storage.remove(username);\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.LocalStorageService));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac\n});","map":{"version":3,"mappings":"AAEA,SAAqBA,OAAO,EAAEC,GAAG,QAAQ,MAAM;AAE/C,SAASC,IAAI,QAAQ,qBAAqB;;;;AAG1C,OAAM,MAAOC,WAAW;EAEtBC,YAAoBC,IAAgB,EAAUC,OAA4B;IAAtD,SAAI,GAAJD,IAAI;IAAsB,YAAO,GAAPC,OAAO;IADnD,SAAI,GAAG,IAAIN,OAAO,EAAQ;IAG5B,eAAU,GAAG,KAAK;EAF2D;EAI7EO,SAAS,CAACC,QAAgB,EAAEC,QAAgB;IAC1C,IAAI,CAACJ,IAAI,CACNK,IAAI,CAAC,uCAAuC,EAAE;MAAEF,QAAQ;MAAEC;IAAQ,CAAE,CAAC,CACrEE,IAAI,CAACV,GAAG,CAACW,OAAO,IAAG;MAClB,MAAMC,IAAI,GAAG,IAAIX,IAAI;IACvB,CAAC,CAAC,CAAC,CACFY,SAAS,CAAEC,YAAY,IAAI;MAC1B;IAAA,CAED,CAAC;IAEJ,IAAI,CAACC,UAAU,GAAG,IAAI;EACxB;EAEAC,YAAY,CAACT,QAAgB,EAAEU,KAAa,EAAET,QAAgB,GAAG;EAEjEU,UAAU,CAACX,QAAgB;IACzB,IAAI,CAACQ,UAAU,GAAG,KAAK;IACvB,IAAI,CAACV,OAAO,CAACc,MAAM,CAACZ,QAAQ,CAAC;EAC/B;;AAzBWL,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAkB,SAAXlB,WAAW;AAAA","names":["Subject","tap","User","AuthService","constructor","http","storage","userLogin","username","password","post","pipe","resData","user","subscribe","responseData","isLoggedIn","userRegister","email","userLogout","remove","factory"],"sourceRoot":"","sources":["C:\\Users\\Devil\\Desktop\\BlogApp\\frontend\\BlogApp\\src\\app\\auth.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { EventEmitter, Injectable } from '@angular/core';\r\nimport { catchError, Subject, tap } from 'rxjs';\r\nimport { LocalStorageService } from './localstorage.service';\r\nimport { User } from './models/user.model';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n    user = new Subject<User>();\r\n  constructor(private http: HttpClient, private storage: LocalStorageService) {}\r\n\r\n  isLoggedIn = false;\r\n\r\n  userLogin(username: string, password: string) {\r\n    this.http\r\n      .post('http://127.0.0.1:8000/api/user/token/', { username, password })\r\n      .pipe(tap(resData => {\r\n        const user = new User\r\n      }))\r\n      .subscribe((responseData) => {\r\n        // console.log(responseData);\r\n\r\n      });\r\n\r\n    this.isLoggedIn = true;\r\n  }\r\n\r\n  userRegister(username: string, email: string, password: string) {}\r\n\r\n  userLogout(username: string) {\r\n    this.isLoggedIn = false;\r\n    this.storage.remove(username);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}