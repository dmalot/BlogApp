{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class AuthService {}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)();\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac\n});","map":{"version":3,"mappings":";AAQA,OAAM,MAAOA,WAAW;AAAXA,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAC,SAAXD,WAAW;AAAA","names":["AuthService","factory"],"sourceRoot":"","sources":["C:\\Users\\Devil\\Desktop\\BlogApp\\frontend\\BlogApp\\src\\app\\auth.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { EventEmitter, Injectable, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { BehaviorSubject, catchError, Subject, tap } from 'rxjs';\r\nimport { LocalStorageService } from './localstorage.service';\r\nimport { User } from './models/user.model';\r\n\r\n@Injectable()\r\nexport class AuthService implements {\r\n  user = new BehaviorSubject<User>(null);\r\n  constructor(\r\n    private http: HttpClient,\r\n    private storage: LocalStorageService,\r\n    private router: Router\r\n  ) {}\r\n\r\n\r\n\r\n  isLoggedIn = false;\r\n\r\n  autoLogin() {\r\n    const userData: {\r\n      email: string;\r\n      username: string;\r\n      token: string;\r\n    } = JSON.parse(this.storage.get('userData'));\r\n    if (!userData) {\r\n      return;\r\n    }\r\n\r\n    const loadedUser = new User(userData.username, userData.email, userData.token);\r\n    this.user.next(loadedUser);\r\n    this.isLoggedIn = true;\r\n  }\r\n\r\n  userLogin(username: string, password: string) {\r\n    return this.http\r\n      .post('http://127.0.0.1:8000/api/user/token/', { username, password })\r\n      .pipe(\r\n        tap((resData: User) => {\r\n          const user = new User(resData.username, resData.email, resData.token);\r\n          this.user.next(user);\r\n          this.storage.set('userData', JSON.stringify(resData));\r\n        })\r\n      )\r\n      .subscribe((resData) => {\r\n        console.log(resData);\r\n        this.isLoggedIn = true;\r\n        console.log('user is ' + this.isLoggedIn);\r\n        this.router.navigate(['home']);\r\n      });\r\n  }\r\n\r\n  userRegister(username: string, email: string, password: string) {\r\n    this.http\r\n      .post('http://127.0.0.1:8000/api/user/create/', {\r\n        username,\r\n        email,\r\n        password,\r\n      })\r\n      .subscribe((userData) => {\r\n        console.log('user created');\r\n      });\r\n    this.http\r\n      .post('http://127.0.0.1:8000/api/user/token/', { username, password })\r\n      .pipe(\r\n        tap((resData: User) => {\r\n          const user = new User(resData.username, resData.email, resData.token);\r\n          this.user.next(user);\r\n        })\r\n      );\r\n  }\r\n\r\n  userLogout() {\r\n    this.user.next(null);\r\n    this.storage.remove('userData');\r\n    this.router.navigate(['/']);\r\n    this.isLoggedIn = false;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}