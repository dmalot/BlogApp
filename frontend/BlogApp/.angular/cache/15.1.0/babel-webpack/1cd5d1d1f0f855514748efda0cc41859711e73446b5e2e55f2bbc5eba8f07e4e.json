{"ast":null,"code":"export class AuthInterceptorService {\n  constructor(storage) {\n    this.storage = storage;\n  }\n  intercept(req, next) {\n    console.log(this.storage.get(req.user));\n    return next.handle(req);\n  }\n}","map":{"version":3,"mappings":"AAIA,OAAM,MAAOA,sBAAsB;EAE/BC,YAAoBC,OAA4B;IAA5B,YAAO,GAAPA,OAAO;EAAwB;EAEnDC,SAAS,CAACC,GAAqB,EAAEC,IAAiB;IAE9CC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACL,OAAO,CAACM,GAAG,CAACJ,GAAG,CAACK,IAAI,CAAC,CAAC;IAEvC,OAAOJ,IAAI,CAACK,MAAM,CAACN,GAAG,CAAC;EAG3B","names":["AuthInterceptorService","constructor","storage","intercept","req","next","console","log","get","user","handle"],"sourceRoot":"","sources":["C:\\Users\\Devil\\Desktop\\BlogApp\\frontend\\BlogApp\\src\\app\\auth-interceptor.service.ts"],"sourcesContent":["import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\nimport { LocalStorageService } from \"./localstorage.service\";\r\n\r\nexport class AuthInterceptorService implements HttpInterceptor {\r\n\r\n    constructor(private storage: LocalStorageService) {}\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n        console.log(this.storage.get(req.user))\r\n\r\n        return next.handle(req);\r\n\r\n\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}