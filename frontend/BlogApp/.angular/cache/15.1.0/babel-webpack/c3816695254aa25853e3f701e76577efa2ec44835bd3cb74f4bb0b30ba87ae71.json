{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate(route, state) {\n    var isAuthenticated = this.authService.isLoggedIn;\n    if (!isAuthenticated) {\n      this.router.navigate(['/']);\n    }\n    return isAuthenticated;\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAMA,OAAM,MAAOA,SAAS;EAElBC,YAAoBC,WAAwB,EACxBC,MAAc;IADd,gBAAW,GAAXD,WAAW;IACX,WAAM,GAANC,MAAM;EAAW;EAErCC,WAAW,CAACC,KAA6B,EAAEC,KAA0B;IAEjE,IAAIC,eAAe,GAAG,IAAI,CAACL,WAAW,CAACM,UAAU;IAEjD,IAAG,CAACD,eAAe,EAAE;MACjB,IAAI,CAACJ,MAAM,CAACM,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;;IAG/B,OAAOF,eAAe;EAG1B;;AAhBSP,SAAS;mBAATA,SAAS;AAAA;AAATA,SAAS;SAATA,SAAS;EAAAU,SAATV,SAAS;EAAAW,YADG;AAAM","names":["AuthGuard","constructor","authService","router","canActivate","route","state","isAuthenticated","isLoggedIn","navigate","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Devil\\Desktop\\BlogApp\\frontend\\BlogApp\\src\\app\\auth-guard.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\nimport { AuthService } from \"./auth.service\";\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n    constructor(private authService: AuthService,\r\n                private router: Router) {}\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\r\n\r\n        var isAuthenticated = this.authService.isLoggedIn\r\n\r\n        if(!isAuthenticated) {\r\n            this.router.navigate(['/']);\r\n        }\r\n\r\n        return isAuthenticated\r\n\r\n\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}